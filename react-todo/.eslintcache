[{"/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/reportWebVitals.js":"1","/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/App.js":"2","/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/index.js":"3"},{"size":362,"mtime":1606446046213,"results":"4","hashOfConfig":"5"},{"size":1858,"mtime":1606448063575,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606446046212,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e33lx1",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/reportWebVitals.js",[],"/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/App.js",["15","16","17","18"],"import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nvar getTodos = async () => {\n\n  var req = await axios.get(\"http://localhost:3131\")\n  return req.data\n}\n\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(null)\n  const [data, setdata] = useState([])\n  useEffect(async () => {\n    var d = await getTodos()\n    setdata(d)\n  }, []);\n  var addTodo = async (name) => {\n    console.log(name)\n    await axios.post(\"http://localhost:3131\", { \"name\": name.nativeEvent.data, \"completed\": false })\n    var d = await getTodos()\n    setdata(d)\n  }\n\n  var deleteTodo = async (id) => {\n\n    var req = await axios.delete(\"http://localhost:3131/\" + id)\n    var d = await getTodos()\n    setdata(d)\n\n  }\n  var changeStatus = async (id, completed) => {\n\n    var req = await axios.patch(\"http://localhost:3131/\" + id, { \"completed\": !completed })\n    var d = await getTodos()\n    setdata(d)\n  }\n  console.log(data);\n  return (\n    <div className=\"App\">\n      <center style={{ marginTop: \"150px\" }}>\n        <div className=\"todo-item\">\n          <label htmlFor=\"\">New Todo</label>\n          <br />\n          <input type=\"text\" onChange={(v) => setInputValue(v)} />\n          <br />\n          <br />\n          <button onClick={() => addTodo(inputValue)}>Add Todo</button>\n          <br />\n          <br />\n        </div>\n        {\n          data.map((el) => (\n\n            <div className=\"todo-item\" key={el.id}>\n              <h3>{el.name}</h3>\n              <h6>{el.completed === false ? \"Not completed\" : \"completed\"}</h6>\n              <button onClick={() => deleteTodo(el.id)}>Delete Todo</button>\n              <button onClick={() => changeStatus(el.id, el.completed)}>Change Status</button>\n            </div>\n          ))\n        }\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ahmedmgh/WORK/Youtube/4in1/react-todo/src/index.js",[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"24","line":16,"column":13,"nodeType":"25","endLine":19,"endColumn":4},{"ruleId":"19","severity":1,"message":"26","line":29,"column":9,"nodeType":"21","messageId":"22","endLine":29,"endColumn":12},{"ruleId":"19","severity":1,"message":"26","line":36,"column":9,"nodeType":"21","messageId":"22","endLine":36,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'req' is assigned a value but never used."]